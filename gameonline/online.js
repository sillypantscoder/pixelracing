function createLevel() {
	level = `
VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWWVVVVVVVVVVVV
VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWTTTTTTTTTTTWWWWWVVVVVVVV
VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWTTTTTTTTTTTTTTTTTTTWWWVVVVVV
VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWTTTTTTTTTTTTTTTTTTTTTTTWWWVVVV
VVVVVVVVVVVVVVVVVWWWWWWWWWWWWWWWWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWTTTTTTTTTTTTTTTTTTTTTTTTTTWWVVV
VVVVVVVVVVVVWWWWWWTTTTTTTTTTTTTTTWWWVVVVVVVVVVVVVVVVVVVVVVVVVWWTTTTTTGGGGGTTTTTTTTTTTTTTTTTWWVV
VVVVVVVVVWWWWTTTTTTTTTTTTTTTTTTTTTTWWWVVVVVVVVVVVVVVVVVVVVVVVWTTTTTTGGGGGGTTTTTTTTTTTTTTTTTTWWV
VVVVVVVWWWTTTTTTTTTTTTTTTTTTTTTTTTTTTWWWVVVVVVVVVVVVVVVVVVVVWWTTTTTGGGGGGGGTTTTTTTTTTTTTTTTTTWW
VVVVVVWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWVVVVVVVVVVVVVVVVVVVWTTTTTTGGGGGGGGTTTTTTTTTTTTTTTTTTTW
VVVVVWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWWVVVVVVVVVVVVVVVVWWTTTTTTTGGGGGGGTTTTTTTTTTTTTTTTTTTW
VVVVWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWWVVVVVVVVVVVVWWWTTTTTTTTTTGGGGTTTTWTTTTTTTTTTTTTTTW
VVVWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWWVVVVVVVVWWWTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTW
VVWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWWWVVVWWWTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTTW
VVWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWWWWTTTTTTTTTTTTTTTTTTTTTTWTTTTTTTTTTTTTTTTTW
VWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWWTTTTTTTTTTTTTTTTWW
VWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTTTWWV
WWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTTTWWVV
WTTTTTTTTTTTTTWWWWWWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTTWWWVVV
WTTTTTTTTTTTTWWTBTBTWWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWWTTTTTTTTTTTTTTTTWWVVVVV
WTTTTTTTTTTTTWTTTTTTTTWWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTTTWWVVVVVV
WTTTTTTTTTTTTWBTBTBTBTBTWWWWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTTWWWVVVVVVV
WFFFFFFFFFFFFWTTTTTTTTTTTSSSWWWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTTTWVVVVVVVVV
WFFFFFFFFFFFFWBTBTBTBTBTSSSSSSSWWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTTTWWVVVVVVVVV
WFFFFFFFFFFFFWTTTTTTTTTTSSSSSSSSSWWWWTTTTTTTTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTTTWWVVVVVVVVVV
VWTTTTTTTTTTTWWTBTBTBTTSSSSSSSSSSSSSWWWWTTTTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTTTWWVVVVVVVVVVV
VWTTTTTTTTTTTTWTTTTTTTTSSSSSSSSSSSSSWJTWWWWTTTTTTTTTTTTTTTTTTTWWWWTTTTTTTTTTTTTTTTWVVVVVVVVVVVV
VWTTTTTTTTTTTTWTBTBTBTSSSSSSSSSSSSSSWWTTTTWWWWTTTTTTTTTTTTTWWWWTTWWTTTTTTTTTTTTTTTWVVVVVVVVVVVV
VWTTTTTTTTTTTTWWTTTTTSSSSSSSSSSSSSSSSWTTTTTTTWWWWWWWWWWWWWWWTTTTTTWTTTTTTTTTTTTTTTWVVVVVVVVVVVV
VWTTTTTTTTTTTTTWBTBTSSSSSSSSSSSSSSSSSWTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTWVVVVVVVVVVVV
VWTTTTTTTTTTTTTWTTTSSSSSSSSSSSSSSSSSSWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWTTTTTTTTTTTTTWWVVVVVVVVVVVV
VWWTTTTTTTTTTTTWBTTSSSSSSSSSSSSSSSSSTWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWTTTTTTTTTTTTTWVVVVVVVVVVVVV
VVWTTTTTTTTTTTTWWTTTSSSSSSSSSSSSSSSTTWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTWVVVVVVVVVVVVV
VVWTTTTTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWTTTTTTTTTTTTWVVVVVVVVVVVVV
VVWWTTTTTTTTTTTTWTTTTTTTTTTWWTTTTTTTTWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWTTTTTTTTTTTTWWVVVVVVVVVVVV
VVVWTTTTTTTTTTTTWWTTTTTTTTTTWTTTTTTTTWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWTTTTTTTTTTTTTWVVVVVVVVVVVV
VVVWTTTTTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWW111111111111WVVVVVVVVVVVV
VVVWTTTTTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTWTTTTTTTTTTTTTTTTTTGGGGGGTTTTTTW111111111111WVVVVVVVVVVVV
VVVWTTTTTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTWTTTTTTTTTTTTTTTTGGGGGGGGTTTTTTW111111111111WWVVVVVVVVVVV
VVVWTTTTTTTTTTTTTTWTTTTTTTTTWTTTTTTTTTWTTTTTTTTTWTTTTTGGGGGGGGGGTTTTTW1111111111111WVVVVVVVVVVV
VVVWSTTTTTTTTTTTTTWTTTTTTTTTWWTTTTTTTTWWTTTTTTTTWTTTTTGGGGGGGGGGTTTTTW1111111111111WVVVVVVVVVVV
VVVWSSTTTTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTWTTTTTTTTWTTTTGGGGGGGGGGGTTTTTWTTTTTTTTTTTTTWWVVVVVVVVVV
VVWWSSSTTTTTTTTTTTWWTTTTTTTTTWTTTTTTTTTWTTTTTTTTWWTTTGGGGGGGGGGGTTTTTWTTTTTTTTTTTTTTWVVVVVVVVVV
VVWSSSSTTTTTTTTTTTTWTTTTTTTTTWWTTTTTTTTWWTTTTTTTTWTTTTGGGGGGGGGGTTTTTWTTTTTTTTTTTTTTWVVVVVVVVVV
VVWSSSSTTTTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTWTTTTTTTTWTTTTTGGGGGGGGGTTTTTWTTTTTTTTTTTTTTWWVVVVVVVVV
VVWSSSSSTTTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTWTTTTTTTTWTTTTTTTGGGGGGGTTTTTWTTTTTTTTTTTTTTTWVVVVVVVVV
VWWSSSSSSTTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTWTTTTTTTTWWTTTTTTTTTTTTTTTTTTWTTTTTTTTTTTTTTTWWVVVVVVVV
VWSSSSSSWWTTTTTTTTTWWTTTTTTTTTWTTTTTTTTTWTTTTTTTTTWTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTTWVVVVVVVV
VWSSSSSWWWWWTTTTTTTTWWTTTTTTTTWWTTTTTTTTWTTTTTTTTTWTTTTTTTTTTTTTTTTTWTTTTTTTTTTTTTTTTTWVVVVVVVV
VWSSSSSW333WWWTTTTTTTWTTTTTTTTTWTTTTTTTTWTTTTTTTTTWWTTTTTTTTTTTTTTTTWTTTTTTTTTTTTTTTTTWVVVVVVVV
VWSSSSWW33333WWTTTTTTW222222222WTTTTTTTTWWTTTTTTTTTWTTTTTTTTTTTTTTTTWTTTTTTTTTTTTTTTTTWVVVVVVVV
VWSSSSW3333333WTTTTTTWW22222222WTTTTTTTTTWTTTTTTTTTWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWVVVVVVVV
VWSSSSWW33333SWWTTTTTTW22222222WTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWVVVVVVVV
VWSSSSSW33SSSSSWTTTTTTWW2222222WTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWVVVVVVVVV
VWSSSSSWSSSSSSSWTTTTTTTW2222222WTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWVVVVVVVVV
VWSSSSSWSSSSSSSWTTTTTTTWWTTTTTTWTTTTTTTTTWWTTTTTTTTTWWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWVVVVVVVVV
VWSSSSSSSSSSSSSWWTTTTTTTWWTTTTTWTTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWVVVVVVVVVV
VWSSSSSSSSSSSSSSWTTTTTTTTWTTTTTWTTTTTTTTTTWTTTTTTTTTTWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWVVVVVVVVVV
VWWWWSSSSSSSSSSSWTTTTTTTTWTTTTTWWTTTTTTTTTTTTTTTTTTTTWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWWVVVVVVVVVV
VWTTWWWWWWSSSSSSWTTTTTTTTWTTTTTTWTTTTTTTTTTTTTTTTTTTTWTTTTTTTTTTTTTTTTTTTTTTTTTTTTTWVVVVVVVVVVV
VWTTTTTTTWWWWWWWWTTTTTTTTWTTTTTTWTTTTTTTTTTTTTTTTTTTTWWTTTTTTTTTTTTTTTTTTTTTTTTTTTWWVVVVVVVVVVV
VWTTTTTTTTTTTTTTTTTTTTTTWWTTTTTTWTTTTTTTTTTTTTTTTTTTTTWTTTTTTTTTTTTTTTTTTTTTTTTTTTWVVVVVVVVVVVV
VWWTTTTTTTTTTTTTTTTTTTTWWTTTTTTTWTTTTTTTTTTTTTTTTTTTTTWTTTTTTTTTTTTTTTTTTTTTTTTTTWWVVVVVVVVVVVV
VVWTTTTTTTTTTTTTTTTTTTWWTTTTTTTTWTTTTTTTTTTTTTTTTTTTTPWWTTTTTTTTTTTTTTTTTTTTTTTTWWVVVVVVVVVVVVV
VVWTTTTTTTTTTTTTTTTTTWWTTTTTTTTTWTTTTTTTTTTTTTTTTTTTPPPWTTTTTTTTTTTTTTTTTTTTTTTTWVVVVVVVVVVVVVV
VVWTTTTTTTTTTTTTTTTWWWTTTTTTTTTTWTTTTTTTTTTTTTTTTTPPPPPWTTTTTTTTTTTTTTTTTTTTTTTWWVVVVVVVVVVVVVV
VVWTTTTTTTTTTTTTTWWWTTTTTTTTTTTTWTTTTTTTTTTTTTTTPPPPPPPWTTTTTTTTTTTTTTTTTTTTTTWWVVVVVVVVVVVVVVV
VVWTTTTTTTTTTWWWWWTTTTTTTTTTTTTTWTTTTTTTTTTTTTTPPPPPPPPWWTTTTTTTTTTTTTTTTTTTTTWVVVVVVVVVVVVVVVV
VVWTTTTTTTWWWTTTTTTTTTTTTTTTTTTWWWWWWWWTTTTTTTPPPPPPPPPPWTTTTTTTTTTTTTTTTTTTTWWVVVVVVVVVVVVVVVV
VVWTTTTTTTTTTTTTTTTTTTTTTTTWWWWWVVVVVVWWWWWTTTPPPPPPPPPPWWTTTTTTTTTTTTTTTTTTWWVVVVVVVVVVVVVVVVV
VVWWTTTTTTTTTTTTTTTTTTTTWWWWVVVVVVVVVVVVVVWWWWWPPPPPPPPPPWTTTTTTTTTTTTTTTTVWWVVVVVVVVVVVVVVVVVV
VVVWTTTTTTTTTTTTTTTTTTTWWVVVVVVVVVVVVVVVVVVVVVWWWWWPPPPPPWWTTTTTTTTTTTTTTWWWVVVVVVVVVVVVVVVVVVV
VVVWTTTTTTTTTTTTTTTTTWWWVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWTTTTTTTTTTWWWWVVVVVVVVVVVVVVVVVVVVV
VVVWTTTTTTTTTTTTTTTWWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWWVVVVVVVVVVVVVVVVVVVVVVVV
VVWWTTTTTTTTTTTTTTWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VVWTTTTTTTTTTTTTWWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VVWTTTTTTTTTTTTWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VVWTTTTTTTTTTTTWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VVWTTTTTTTTTTTWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VVWTTTTTTTTTTWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VWWTTTPPPPTTTWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VWTTTPPPPPTTTWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VWTTPPPPPPTTWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VWTTPPPPPPTTWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VWTTTPPPTTTWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VWTTTTTTTTWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VWWTTTTTTWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
VVWWWWWWWWVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV`
	.substring(1).split("\n").map((v) => {
		return v.split("").map((b) => {
			for (var i = 0; i < blocks.length; i++) {
				if (blocks[i].abbr == b) return blocks[i].name
			}
			return blocks[0].name
		})
	})
}

class ConnectedPlayerPixel extends PlayerPixel {
	/**
	 * @param {number} x
	 * @param {number} y
	 */
	constructor(x, y) {
		super(x, y)
		this.id = Math.round(Math.random() * 1000000)
		this.sendstate()
	}
	tick() {
		var _pos = [this.pos[0], this.pos[1]]
		super.tick()
		if (_pos[0] == this.pos[0] && _pos[1] == this.pos[1]) return
		this.sendstate()
	}
	sendstate() {
		socket.send(JSON.stringify({
			"type": "update",
			"id": this.id,
			"x": this.pos[0],
			"y": this.pos[1]
		}))
	}
}
class WebPixel extends Pixel {
	/**
	 * @param {number} x
	 * @param {number} y
	 * @param {number} id
	 */
	constructor(x, y, id) {
		super(x, y)
		this.color = "orange"
		this.id = id
	}
}

var ws_url = `wss://${location.hostname}:8774`

var socket = new WebSocket(ws_url)
socket.addEventListener("open", () => {
	socket.send(JSON.stringify({
		"type": "request_update"
	}))
	Pixel.create(ConnectedPlayerPixel)
})
socket.addEventListener("message", (e) => {
	/** @type {{ type: "request_update" } | { type: "update", id: number, x: number, y: number }} */
	var m = JSON.parse(e.data)
	if (m.type == "request_update") {
		for (var i = 0; i < players.length; i++) {
			var p = players[i]
			if (p instanceof ConnectedPlayerPixel) {
				p.sendstate()
			}
		}
		return
	}
	for (var i = 0; i < players.length; i++) {
		var p = players[i]
		if (p instanceof WebPixel) {
			if (p.id == m.id) {
				p.pos = [m.x, m.y]
				return
			}
		}
	}
	players.push(new WebPixel(m.x, m.y, m.id))
})
class MainOnline {
	static main() {
		createLevel()
		Level.generateBoard()
		Main.addBlockCSS()
		Main.startKeyListeners()
		MainOnline.tickLoop()
	}
	static async tickLoop() {
		while (true) {
			if (DEBUG) {
				try {
					MainOnline.tick()
				} catch (e) {
					alert(e)
					return
				}
			} else MainOnline.tick()
			await new Promise((resolve) => requestAnimationFrame(resolve))
			//await new Promise((resolve) => requestAnimationFrame(resolve))
		}
	}
	static tick() {
		/** @type {HTMLDivElement} */
		// @ts-ignore
		var viewport = document.querySelector("#viewport")
		var _px = [...players]
		for (var i = 0; i < _px.length; i++) {
			var px = _px[i]
			px.tick()
		}
		var _pt = [...particles]
		for (var i = 0; i < _pt.length; i++) {
			var pt = _pt[i]
			pt.tick()
		}
		// Find Player
		var player = Level.getFocusPlayer()
		if (player != null) {
			// camera
			/*var box = document.querySelector("#preview").getBoundingClientRect()
			var y = (box.width / 2) - (player.pos[0] / 2)
			var x = (box.height / 2) - (player.pos[1] / 2)*/
			// document.querySelector("#log").innerText = player.pos
			var v = parseFloat(window.getComputedStyle(viewport, null).getPropertyValue('font-size'))
			viewport_pos = [player.pos[0] * v, player.pos[1] * v]
			// viewport.setAttribute("style", `top: calc(50% - ${player.pos[1]}em); left: calc(50% - ${player.pos[0]}em);`)
		}
		viewport.setAttribute("style", `top: calc(50% - ${viewport_pos[1]}px); left: calc(50% - ${viewport_pos[0]}px);`)
		// Update list
		var list = []
		for (var i = 0; i < players.length; i++) {
			var a = "Pixel"
			if (players[i] instanceof PlayerPixel) a = "Player"
			if (players[i] instanceof BotPixel) a = "Bot"
			var chk = players[i].checks.length % totalCheckpointNumber
			a = `${i + 1}. ${a} - ${chk}/${totalCheckpointNumber} checkpoints - ${Math.floor(players[i].checks.length / totalCheckpointNumber)}/${totalLaps} laps`
			/*if (players[i].checks.length >= 6) a += ` (completed ${Math.floor(players[i].checks.length / 3)} laps)`
			else if (players[i].checks.length >= 3) a += ` (completed one lap)`*/
			if (players[i].checks.length >= totalCheckpointNumber * totalLaps) a += ` - Place: #${players[i].place} in ${Math.round(players[i].checks[(totalLaps * totalCheckpointNumber) - 1] / 3) / 10} seconds`
			if (players[i].dead) a += ` - Dead`
			if (players[i].dead && players[i].place == 0) a += ` in ${Math.round(players[i].totalTime / 3) / 10} seconds`
			// var wintime_weight = players[i].checks[players[i].checks.length - 1]
			// if (wintime_weight == undefined) wintime_weight = 0
			// else wintime_weight *= -0.001
			// @ts-ignore
			var order = (players[i].checks.length * 5) + (players[i].dead * -0.1)
			list.push(`<div style="order: ${-order * 100};">${a}</div>`)
		}
		// @ts-ignore
		document.querySelector("#players").innerHTML = list.join("\n")
	}
	static startKeyListeners() {
		window.addEventListener("keydown", (e) => {
			e.preventDefault()
			if (! keys.includes(e.key)) {
				keys.push(e.key)
			}
			if (e.key == " ") location.reload()
			if (e.key == "r" && e.ctrlKey) location.reload()
		});
		window.addEventListener("keyup", (e) => {
			if (keys.includes(e.key)) {
				keys.splice(keys.indexOf(e.key), 1)
			}
		});
	}
}
